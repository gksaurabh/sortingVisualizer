{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhkishore/Desktop/Programming/Projects/SortingVisualizer/sortingVisualizer/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from \"react\";\nimport './SortingVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n  /**\n   * reset array to an empty array/create an empty array\n   * then itterate over 100 and add a random integer value from 5 to 1000\n   * then set state to the new array\n   */\n\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 100; i++) {\n      array.push(randomIntFromInteraval(5, 1000));\n    }\n\n    this.setState({\n      array\n    });\n  }\n  /**\n   * create a div for the array with the key as the index using map\n   */\n\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          height: `${value}px`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/**\n * Return a random int from a given min and max\n */\n\nfunction randomIntFromInteraval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"names":["React","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInteraval","setState","render","map","value","idx","height","min","max","Math","floor","random"],"sources":["/Users/saurabhkishore/Desktop/Programming/Projects/SortingVisualizer/sortingVisualizer/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React from \"react\";\nimport './SortingVisualizer.css'\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    /**\n     * reset array to an empty array/create an empty array\n     * then itterate over 100 and add a random integer value from 5 to 1000\n     * then set state to the new array\n     */\n    resetArray() {\n        const array = [];\n\n        for (let i = 0; i < 100; i++){\n            array.push(randomIntFromInteraval(5, 1000));\n        }\n        this.setState({array});\n    }\n\n    /**\n     * create a div for the array with the key as the index using map\n     */\n    render() {\n        const {array} = this.state;\n\n        return (\n            <div className=\"array-container\">\n                {array.map((value, idx) => (\n                    <div \n                        className=\"array-bar\" \n                        key={idx} \n                        style={{height: `${value}px`}}> \n                    \n                    </div>\n                ))}\n            </div>\n        )\n    };\n}\n\n    /**\n     * Return a random int from a given min and max\n     */\nfunction randomIntFromInteraval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;EAC3DC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE;IADE,CAAb;EAGH;;EAEDC,iBAAiB,GAAE;IACf,KAAKC,UAAL;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACIA,UAAU,GAAG;IACT,MAAMF,KAAK,GAAG,EAAd;;IAEA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA6B;MACzBH,KAAK,CAACI,IAAN,CAAWC,sBAAsB,CAAC,CAAD,EAAI,IAAJ,CAAjC;IACH;;IACD,KAAKC,QAAL,CAAc;MAACN;IAAD,CAAd;EACH;EAED;AACJ;AACA;;;EACIO,MAAM,GAAG;IACL,MAAM;MAACP;IAAD,IAAU,KAAKD,KAArB;IAEA,oBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,UACKC,KAAK,CAACQ,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,kBACP;QACI,SAAS,EAAC,WADd;QAGI,KAAK,EAAE;UAACC,MAAM,EAAG,GAAEF,KAAM;QAAlB;MAHX,GAESC,GAFT;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH;;AA7C0D;AAgD3D;AACJ;AACA;;AACA,SAASL,sBAAT,CAAgCO,GAAhC,EAAqCC,GAArC,EAA0C;EACtC,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH"},"metadata":{},"sourceType":"module"}